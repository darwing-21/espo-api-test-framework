{"uid":"a136c27bea1a30b","name":"test_create_team_with_empty_name_returns_400","fullName":"test.teams.test_post_team#test_create_team_with_empty_name_returns_400","historyId":"0e61fbe0d14d8c490ae430f12f93af0b","time":{"start":1725939967986,"stop":1725939968345,"duration":359},"status":"skipped","statusMessage":"XFAIL This test case is expected to fail due to known issue.\n\nAssertionError: Expected status code 400, but got 200. Response text: {\"id\":\"66dfc10046b7f8edd\",\"name\":null,\"deleted\":false,\"createdAt\":\"2024-09-10 03:46:08\",\"modifiedAt\":\"2024-09-10 03:46:08\",\"rolesIds\":[],\"rolesNames\":{},\"layoutSetName\":null,\"workingTimeCalendarName\":null}","statusTrace":"@pytest.mark.createteam\n    @pytest.mark.xfail(reason=\"This test case is expected to fail due to known issue.\", condition=True)\n    def test_create_team_with_empty_name_returns_400():\n        url = EndpointTeams.get_list_team()\n        data = create_team_data(name=\"\")\n        response = TeamService.create_team(url, data)\n>       AssertionManager.assert_status_code_400(response)\n\ntest/teams/test_post_team.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n        logger.info(f\"Validating status code 400 for response with URL: {response.url}\")\n        try:\n>           assert response.status_code == 400, (\n                f\"Expected status code 400, but got {response.status_code}. Response text: {response.text}\"\n            )\nE           AssertionError: Expected status code 400, but got 200. Response text: {\"id\":\"66dfc10046b7f8edd\",\"name\":null,\"deleted\":false,\"createdAt\":\"2024-09-10 03:46:08\",\"modifiedAt\":\"2024-09-10 03:46:08\",\"rolesIds\":[],\"rolesNames\":{},\"layoutSetName\":null,\"workingTimeCalendarName\":null}\n\ncore/assertions/status_code_assertion.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1725939934214,"stop":1725939934231,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL This test case is expected to fail due to known issue.\n\nAssertionError: Expected status code 400, but got 200. Response text: {\"id\":\"66dfc10046b7f8edd\",\"name\":null,\"deleted\":false,\"createdAt\":\"2024-09-10 03:46:08\",\"modifiedAt\":\"2024-09-10 03:46:08\",\"rolesIds\":[],\"rolesNames\":{},\"layoutSetName\":null,\"workingTimeCalendarName\":null}","statusTrace":"@pytest.mark.createteam\n    @pytest.mark.xfail(reason=\"This test case is expected to fail due to known issue.\", condition=True)\n    def test_create_team_with_empty_name_returns_400():\n        url = EndpointTeams.get_list_team()\n        data = create_team_data(name=\"\")\n        response = TeamService.create_team(url, data)\n>       AssertionManager.assert_status_code_400(response)\n\ntest/teams/test_post_team.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n        logger.info(f\"Validating status code 400 for response with URL: {response.url}\")\n        try:\n>           assert response.status_code == 400, (\n                f\"Expected status code 400, but got {response.status_code}. Response text: {response.text}\"\n            )\nE           AssertionError: Expected status code 400, but got 200. Response text: {\"id\":\"66dfc10046b7f8edd\",\"name\":null,\"deleted\":false,\"createdAt\":\"2024-09-10 03:46:08\",\"modifiedAt\":\"2024-09-10 03:46:08\",\"rolesIds\":[],\"rolesNames\":{},\"layoutSetName\":null,\"workingTimeCalendarName\":null}\n\ncore/assertions/status_code_assertion.py:37: AssertionError","steps":[],"attachments":[{"uid":"64eda71f48dcf1c2","name":"log","source":"64eda71f48dcf1c2.txt","type":"text/plain","size":1836},{"uid":"751795a9fca6cbd5","name":"stderr","source":"751795a9fca6cbd5.txt","type":"text/plain","size":1904}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"},{"name":"tag","value":"createteam"},{"name":"parentSuite","value":"test.teams"},{"name":"suite","value":"test_post_team"},{"name":"host","value":"fv-az1272-901"},{"name":"thread","value":"2128-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.teams.test_post_team"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["createteam","@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"]},"source":"a136c27bea1a30b.json","parameterValues":[]}