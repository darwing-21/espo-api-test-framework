{"uid":"59731fd230c56652","name":"test_reject_negative_max_size_value_returns_400","fullName":"test.teams.test_get_users_team#test_reject_negative_max_size_value_returns_400","historyId":"8d6372b5391c65dd7484be55d14f7411","time":{"start":1728317257068,"stop":1728317257377,"duration":309},"status":"skipped","statusMessage":"XFAIL This test case is expected to fail due to known issue.\n\nAssertionError: Expected status code 400, but got 500. Response text:","statusTrace":"setup_teardown_user_team = {'createdAt': '2024-10-07 16:07:35', 'deleted': False, 'id': '670407475cd5d7417', 'layoutSetId': '6703f89e1996ee098', ...}\n\n    @pytest.mark.listuserteam\n    @pytest.mark.xfail(reason=\"This test case is expected to fail due to known issue.\", condition=True)\n    def test_reject_negative_max_size_value_returns_400(setup_teardown_user_team):\n        team = setup_teardown_user_team\n        url = EndpointTeams.get_list_users_team(team['id'], maxSize=-1)\n        response = TeamService.get_list_users_team(url)\n>       AssertionManager.assert_status_code_400(response)\n\ntest/teams/test_get_users_team.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n        logger.info(f\"Validating status code 400 for response with URL: {response.url}\")\n        try:\n>           assert response.status_code == 400, (\n                f\"Expected status code 400, but got {response.status_code}. Response text: {response.text}\"\n            )\nE           AssertionError: Expected status code 400, but got 500. Response text:\n\ncore/assertions/status_code_assertion.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1728317231286,"stop":1728317231302,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_teardown_user_team","time":{"start":1728317255107,"stop":1728317255741,"duration":634},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL This test case is expected to fail due to known issue.\n\nAssertionError: Expected status code 400, but got 500. Response text:","statusTrace":"setup_teardown_user_team = {'createdAt': '2024-10-07 16:07:35', 'deleted': False, 'id': '670407475cd5d7417', 'layoutSetId': '6703f89e1996ee098', ...}\n\n    @pytest.mark.listuserteam\n    @pytest.mark.xfail(reason=\"This test case is expected to fail due to known issue.\", condition=True)\n    def test_reject_negative_max_size_value_returns_400(setup_teardown_user_team):\n        team = setup_teardown_user_team\n        url = EndpointTeams.get_list_users_team(team['id'], maxSize=-1)\n        response = TeamService.get_list_users_team(url)\n>       AssertionManager.assert_status_code_400(response)\n\ntest/teams/test_get_users_team.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n        logger.info(f\"Validating status code 400 for response with URL: {response.url}\")\n        try:\n>           assert response.status_code == 400, (\n                f\"Expected status code 400, but got {response.status_code}. Response text: {response.text}\"\n            )\nE           AssertionError: Expected status code 400, but got 500. Response text:\n\ncore/assertions/status_code_assertion.py:37: AssertionError","steps":[],"attachments":[{"uid":"4e5ba222c0cd4467","name":"log","source":"4e5ba222c0cd4467.txt","type":"text/plain","size":1857},{"uid":"49e1e6e0777aabf5","name":"stderr","source":"49e1e6e0777aabf5.txt","type":"text/plain","size":1926}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup_teardown_user_team::0","time":{"start":1728317258339,"stop":1728317258650,"duration":311},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"},{"name":"tag","value":"listuserteam"},{"name":"parentSuite","value":"test.teams"},{"name":"suite","value":"test_get_users_team"},{"name":"host","value":"fv-az2021-400"},{"name":"thread","value":"2070-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.teams.test_get_users_team"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)","listuserteam"]},"source":"59731fd230c56652.json","parameterValues":[]}