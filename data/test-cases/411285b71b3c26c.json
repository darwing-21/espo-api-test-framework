{"uid":"411285b71b3c26c","name":"test_create_team_with_empty_name_returns_400","fullName":"test.teams.test_post_team#test_create_team_with_empty_name_returns_400","historyId":"0e61fbe0d14d8c490ae430f12f93af0b","time":{"start":1728316511710,"stop":1728316512054,"duration":344},"status":"skipped","statusMessage":"XFAIL This test case is expected to fail due to known issue.\n\nAssertionError: Expected status code 400, but got 200. Response text: {\"id\":\"67040460006683459\",\"name\":null,\"deleted\":false,\"createdAt\":\"2024-10-07 15:55:12\",\"modifiedAt\":\"2024-10-07 15:55:12\",\"rolesIds\":[],\"rolesNames\":{},\"layoutSetName\":null,\"workingTimeCalendarName\":null}","statusTrace":"teardown_team = [{'createdAt': '2024-10-07 15:55:12', 'deleted': False, 'id': '67040460006683459', 'layoutSetName': None, ...}]\n\n    @pytest.mark.createteam\n    @pytest.mark.xfail(reason=\"This test case is expected to fail due to known issue.\", condition=True)\n    def test_create_team_with_empty_name_returns_400(teardown_team):\n        created_teams = teardown_team\n        url = EndpointTeams.get_list_team()\n        data = create_team_data(name=\"\")\n        response = TeamService.create_team(url, data)\n        created_teams.append(response.json())\n>       AssertionManager.assert_status_code_400(response)\n\ntest/teams/test_post_team.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n        logger.info(f\"Validating status code 400 for response with URL: {response.url}\")\n        try:\n>           assert response.status_code == 400, (\n                f\"Expected status code 400, but got {response.status_code}. Response text: {response.text}\"\n            )\nE           AssertionError: Expected status code 400, but got 200. Response text: {\"id\":\"67040460006683459\",\"name\":null,\"deleted\":false,\"createdAt\":\"2024-10-07 15:55:12\",\"modifiedAt\":\"2024-10-07 15:55:12\",\"rolesIds\":[],\"rolesNames\":{},\"layoutSetName\":null,\"workingTimeCalendarName\":null}\n\ncore/assertions/status_code_assertion.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1728316483339,"stop":1728316483355,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"teardown_team","time":{"start":1728316511709,"stop":1728316511709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL This test case is expected to fail due to known issue.\n\nAssertionError: Expected status code 400, but got 200. Response text: {\"id\":\"67040460006683459\",\"name\":null,\"deleted\":false,\"createdAt\":\"2024-10-07 15:55:12\",\"modifiedAt\":\"2024-10-07 15:55:12\",\"rolesIds\":[],\"rolesNames\":{},\"layoutSetName\":null,\"workingTimeCalendarName\":null}","statusTrace":"teardown_team = [{'createdAt': '2024-10-07 15:55:12', 'deleted': False, 'id': '67040460006683459', 'layoutSetName': None, ...}]\n\n    @pytest.mark.createteam\n    @pytest.mark.xfail(reason=\"This test case is expected to fail due to known issue.\", condition=True)\n    def test_create_team_with_empty_name_returns_400(teardown_team):\n        created_teams = teardown_team\n        url = EndpointTeams.get_list_team()\n        data = create_team_data(name=\"\")\n        response = TeamService.create_team(url, data)\n        created_teams.append(response.json())\n>       AssertionManager.assert_status_code_400(response)\n\ntest/teams/test_post_team.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n        logger.info(f\"Validating status code 400 for response with URL: {response.url}\")\n        try:\n>           assert response.status_code == 400, (\n                f\"Expected status code 400, but got {response.status_code}. Response text: {response.text}\"\n            )\nE           AssertionError: Expected status code 400, but got 200. Response text: {\"id\":\"67040460006683459\",\"name\":null,\"deleted\":false,\"createdAt\":\"2024-10-07 15:55:12\",\"modifiedAt\":\"2024-10-07 15:55:12\",\"rolesIds\":[],\"rolesNames\":{},\"layoutSetName\":null,\"workingTimeCalendarName\":null}\n\ncore/assertions/status_code_assertion.py:37: AssertionError","steps":[],"attachments":[{"uid":"cdebfed83c07d2cf","name":"log","source":"cdebfed83c07d2cf.txt","type":"text/plain","size":3166},{"uid":"a5abbb73f27ff355","name":"stderr","source":"a5abbb73f27ff355.txt","type":"text/plain","size":3309}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"teardown_team::0","time":{"start":1728316512060,"stop":1728316512419,"duration":359},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"},{"name":"tag","value":"createteam"},{"name":"parentSuite","value":"test.teams"},{"name":"suite","value":"test_post_team"},{"name":"host","value":"fv-az1535-56"},{"name":"thread","value":"2094-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.teams.test_post_team"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["createteam","@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"]},"source":"411285b71b3c26c.json","parameterValues":[]}